@model ProductSearch.Models.StockPurchaseVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Purchase</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Category</label>
            <div class="col-md-10">
                <select id="CategoryID" class="form-control">
                    <option value="">--- Select Category ---</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Sub Category</label>
            <div class="col-md-10">
                <select disabled="disabled" id="SubCategoryID" name="SubCategoryID" class="form-control">
                    <option value="">--- Select Subcategory ---</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Product</label>
            <div class="col-md-10">
                <select disabled="disabled" id="ProductID" name="ProductID" class="form-control">
                    <option value="">--- Select Product ---</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierID, "SupplierID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SupplierID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function () {
            //Get Category
            $.ajax({
                url: '/Home/GetCategories',
                type: 'GET',
                success: function (res) {
                    var html;
                    $.each(res, function (index, row) {
                        html = '<option value="' + row.id + '">' + row.name + '</option>';
                        $('#CategoryID').append(html);
                    })
                }
            });

            //Get Sub Category based on Category
            $('#CategoryID').change(function () {
                $('#SubCategoryID').empty();
                $.ajax({
                    url: '/Home/GetSubCategories',
                    type: 'POST',
                    data: { id: $('#CategoryID').val() },
                    dataType: 'json',
                    success: function (res) {
                        var html;
                        var resData = $.isEmptyObject(res);//check array empty or not :: return true or false
                        if (resData == true) {
                            $('#SubCategoryID').attr('disabled',true);
                            html = '<option value="0">No Data Available</option>';
                            $('#SubCategoryID').append(html);
                        } else {
                            var common = { id: 0, name: '---- Select Sub Category ----' }
                            //res.splice(position, numberOfItemToRemove, item)
                            res.splice(0, 0, common); //Add array object
                            $.each(res, function (index, row) {
                                $('#SubCategoryID').removeAttr('disabled');
                                html = '<option value="' + row.id + '">' + row.name + '</option>';
                                $('#SubCategoryID').append(html);
                            })
                        }

                    }
                })
            });
            //Get Product Based on Sub Category
            $('#SubCategoryID').change(function () {
                $('#ProductID').empty();
                $.ajax({
                    url: '/Home/GetProducts',
                    type: 'POST',
                    data: { id: $('#SubCategoryID').val() },
                    dataType: 'json',
                    success: function (res) {
                        var html;
                        var resData = $.isEmptyObject(res);//check array empty or not :: return true or false
                        if (resData == true) {
                            $('#ProductID').attr('disabled',true);
                            html = '<option value="0">No Data Available</option>';
                            $('#ProductID').append(html);
                        } else {
                            var common = { id: 0, name: '---- Select Product ----' }
                            //res.splice(position, numberOfItemToRemove, item)
                            res.splice(0,0,common); //Add array object
                            $.each(res, function (index, row) {
                                $('#ProductID').removeAttr('disabled');
                                html = '<option value="' + row.id + '">' + row.name + '</option>';
                                $('#ProductID').append(html);
                            })
                        }
                    }
                })
            });
        });
    </script>
}


